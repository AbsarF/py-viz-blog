hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
library(coeftest)
library("coeftest")
library(lmtest)
library(plm)
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID", "ftime"), model="within", effect="individual")
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID"), model="within", effect="individual")
summary(m4)
m4b = vcovhHC.plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID"), model="within", effect="individual")
m4b = vcovhHC(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID"), model="within", effect="individual")
coeftest(m4, vcov.=vcovHC)
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
library(coeftest)
library(plm)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
library(lmtest)
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
library("multiwayvcov"))
library("multiwayvcov")
install.packages("multiwayvcov")
# http://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
library(lmtest)
library(plm)
library(multiwayvcov)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
# m2 and m4 are the same thing
m2 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID"), model="within", effect="individual")
summary(m2)
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
summary(m2)
summary(m4)
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
summary(m3)
# http://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
library(lmtest)
library(plm)
library(multiwayvcov)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
# m2 and m4 are the same thing
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE, type="HC3"))
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
?cluster.vcov
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
# http://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
library(lmtest)
library(plm)
library(multiwayvcov)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
# m2 and m4 are the same thing
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
# http://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
library(lmtest)
library(plm)
library(multiwayvcov)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
# m2 and m4 are the same thing
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
summary(m3)
# http://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
library(lmtest)
library(plm)
library(multiwayvcov)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
# m2 and m4 are the same thing
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
# http://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
library(lmtest)
library(plm)
library(multiwayvcov)
library(dplyr)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
hdp = hdp %>% sample_n(500)
hdp$ftime <- 1:NROW(tmp)
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID", "ftime"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
summary(m4)
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
summary(m2)
summary(m4)
summary(m2)
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID + ftime, data=hdp)
names(hdp)
library(lmtest)
library(plm)
library(multiwayvcov)
library(dplyr)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
hdp = hdp %>% sample_n(500)
hdp$ftime <- 1:NROW(hdp)
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID", "ftime"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
summary(m2)
summary(m4)
summary(m2)
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
summary(m3)
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
m5 = lme(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, random = ~ 1 | DID, data=data)
library(nlme)
m5 = lme(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, random = ~ 1 | DID, data=data)
m5 = lme(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, random = ~ 1 | DID, data=hdp)
summary(m5)
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
library(lmtest)
library(plm)
library(multiwayvcov)
library(dplyr)
library(nlme)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
hdp = hdp %>% sample_n(500)
hdp$ftime <- 1:NROW(hdp)
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID", "ftime"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
# m2 and m4 are the same thing
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
summary(m3)
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
m3 = lm(remission ~ IL6 + CRP + LengthofStay + Experience, data=hdp)
summary(m3)
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ CancerStage, df_correction = FALSE))
# http://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
library(lmtest)
library(plm)
library(multiwayvcov)
library(dplyr)
library(nlme)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
hdp = hdp %>% sample_n(500)
hdp$ftime <- 1:NROW(hdp)
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID", "ftime"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
# m2 and m4 are the same thing
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
summary(m4)
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
# http://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
library(lmtest)
library(plm)
library(multiwayvcov)
library(dplyr)
library(nlme)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
hdp = hdp %>% sample_n(500)
hdp$ftime <- 1:NROW(hdp)
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID", "ftime"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
# m2 and m4 are the same thing
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
hdp$CancerStage
hdp = hdp %>% sample_n(100)
hdp$ftime <- 1:NROW(hdp)
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID", "ftime"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
# m2 and m4 are the same thing
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
m3 = lm(remission ~ IL6 + CRP + LengthofStay + Experience, data=hdp)
summary(m3)
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ CancerStage, df_correction = FALSE))
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
summary(m3)
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ CancerStage, df_correction = FALSE))
m4 = plm(remission ~ IL6 + CRP + LengthofStay + Experience, data=hdp, index=c("CancerStage"), model="within", effect="individual")
summary(m4)
m4 = plm(remission ~ IL6 + CRP + LengthofStay + Experience, data=hdp, index=c("CancerStage", "ftime"), model="within", effect="individual")
summary(m4)
summary(m3)
?plm
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
summary(m4)
# http://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
library(lmtest)
library(plm)
library(multiwayvcov)
library(dplyr)
library(nlme)
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
hdp = hdp %>% sample_n(100)
hdp$ftime <- 1:NROW(hdp)
m4 = plm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp, index=c("DID", "ftime"), model="within", effect="individual")
coeftest(m4, vcov=vcovHC(m4,type="HC0",cluster="group"))
coeftest(m4, vcov=vcovHC(m4,type="HC3",cluster="group"))
coeftest(m4, vcov.=vcovHC)
summary(m4)
# m2 and m4 are the same thing
m2 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience + DID, data=hdp)
m3 = lm(remission ~ IL6 + CRP + CancerStage + LengthofStay + Experience, data=hdp)
coeftest(m2, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
coeftest(m3, vcov.= function(y) cluster.vcov(y, ~ DID, df_correction = FALSE))
summary(m3)
coeftest(m3)
coeftest(m3, vcov=vcovHC(m3,type="HC0"))
summary(m3)
5C2
combn(5, 2)
library(DT)
devtools::install_github('rstudio/DT')
?DT
library(DT)
?DT
?datatable
cars
datatable((cars))
x = datatable(cars)
x
htmltools::print(x)
htmltools::html_printprint(x)
htmltools::html_print(x)
print(x)
library(DT)
datatable(cars)
x = datatable(cars)
x
renderDataTable(x)
htmltools::html_print(x)
p = htmltools::html_print(x)
print(p)
datatable(cars)
install.packages("forecast")
library(forecast)
?lm
?glm
library(ggplot2)
library(dplyr)
library(plyr)
library(dplyr)
library(reshape2)
library(stringr)
library(lubridate)
install.packages("lubridate")
library(tidyr)
exp(-1.12546)
x = .3245032
x/(1-x)
x/(1+x)
17./91
.5927822-1.1470852
exp(-0.554303)
x = .5744725
x/(1+x)
17./49
695/670
prop.test(c(670, 695), c(150000, 150000))
-0.0006549844/0.004466667
0.0003216511/0.004466667
install.packages("arm")
install.packages("MCMCglmm")
library(nlme)
?lme
df = read.csv('~/Downloads/cc.csv')
mod2 = brm(success ~ 1 + treated + (1 + treated | country), df, warmup=10000, iter=50000)
library(brms)
df = read.csv('~/Downloads/cc.csv')
mod2 = brm(success ~ 1 + treated + (1 + treated | country), df, warmup=10000, iter=50000)
library(brms)
df = read.csv('~/Downloads/cc.csv')
mod2 = brm(success ~ 1 + treated + (1 + treated | country), df, warmup=10000, iter=20000)
summary(mod2)
print(coef(mod2)$country[1, 1])
print(coef(mod2)$country[1, 1] + coef(mod2)$country[1, 2])
print(coef(mod2)$country[2, 1])
print(coef(mod2)$country[2, 1] + coef(mod2)$country[2, 2])
library(brms)
df = read.csv('~/Downloads/cc.csv')
mod2 = brm(success ~ 1 + treated + (1 + treated | country), df, warmup=10000, iter=20000)
print(coef(mod2)$country[1, 1])
print(coef(mod2)$country[1, 1] + coef(mod2)$country[1, 2])
print(coef(mod2)$country[2, 1])
print(coef(mod2)$country[2, 1] + coef(mod2)$country[2, 2])
c(c(1, 2), c(3, 4))
Sigma.B[1, 1] = 2
?inverse
install.packages("glmer2stan")
install.packages("rstanarm")
library(rstanarm)
df = read.csv("~/Downloads/cc.csv")
60*4
mod = stan_glmer(success ~ 1 + treated + (1 + treated | country), df, family=binomial)
summary(mod)
mod
coef(mod)
inv = function(x) {
return(exp(x)/(1 + exp(x)))
}
print(inv(coef(mod)$country[1, 1]))
print(inv(coef(mod)$country[1, 1] + coef(mod)$country[1, 2]))
print(inv(coef(mod)$country[2, 1]))
print(inv(coef(mod)$country[2, 1] + coef(mod)$country[2, 2]))
?stan_glmer
df = read.csv("~/Downloads/cc.csv")
library(rstanarm)
mod = stan_glmer(success ~ 1 + treated + (1 + treated | country), df, family="binomial")
summary(mod)
coef(mod)
inv = function(x) {
return(exp(x)/(1 + exp(x)))
}
print(inv(coef(mod)$country[1, 1]))
print(inv(coef(mod)$country[1, 1] + coef(mod)$country[1, 2]))
print(inv(coef(mod)$country[2, 1]))
print(inv(coef(mod)$country[2, 1] + coef(mod)$country[2, 2]))
library(rstanarm)
?stan_glmer
df = read.csv("~/Downloads/cc.csv")
library(arm)
mod = bayesglm(success ~ 1 + treated + (1 + treated | country), df)
mod = bayesglm(success ~ 1 + treated + (1 + treated | country), data=df, family="binomial")
library(lme4)
mod = glmer(success ~ 1 + treated + (1 + treated | country), data=df, family="binomial")
display(mod)
mcsamp(mod)
sim(mod)
?sim
modsim = sim(mod)
apply(coef(modsim), 2, quantile)
apply(coef(modsim), 1, quantile)
coef(modsim)
coef.mod = coef(modsim)
fixef.mod = fixef(modsim)
ranef.mod = ranef(modsim)
sigam.mod = sigma.hat(modsim)
sigma.mod = sigma.hat(modsim)
sigma.mod
yhat = fitted(modsim, mod)
yhat
display(yhat)
head(yhat)
se.coef(mod)
invlogit(se.coef(mod))
invlogit(.251)
se.fixef(mod)
invlogit(.38237)
exp(.382)
1.465/(1+1.465)
se.coef(mod)
coef(od)
coef(mod)
-0.66244625+0.2510277
invlogit(-0.4114185)
invlogit(-0.66244625)
df = read.csv("~/Downloads/cc.csv")
mod = glmer(success ~ 1 + treated + (1 + treated | country), data=df, family="binomial")
coef(mod)
se.coef(mod)
-.772+.18
invlogit(-.592)
invlogit(-.772)
.316-.356
0.1347214
x = 0.1347214
invlogit(x)
invlogit(x+.175)
?se.coef
library(ggplot2)
setwd ('./Documents/data-blog/py-viz/')
df = read.csv('data/iris.csv')
ggplot(df, aes(x='species', y='petalWidth')) + geom_boxplot()
ggplot(df, aes(x='species', y='petalWidth')) + geom_boxplot()
ggplot(df, aes(x=species, y=petalWidth)) + geom_boxplot()
ggplot(df, aes(x=species, y=petalWidth, fill=species)) + geom_boxplot()
df = read.csv('data/titanic.csv')
ggplot(df, aes(x=class, y=fare, color=factor(survived))) + stat_summary_bin(fun.y="mean", geom="bar")
ggplot(df, aes(x=class, y=fare, fill=factor(survived))) + stat_summary_bin(fun.y="mean", geom="bar")
ggplot(df, aes(x=class, y=fare, fill=factor(survived))) + stat_summary_bin(fun.y="mean", geom="bar") + facet_wrap(~survived)
ggplot(df, aes(x=class, y=fare, fill=factor(survived))) + stat_summary_bin(fun.y="mean", geom="bar") + facet_wrap(~class)
ggplot(df, aes(x=class, y=fare) + stat_summary_bin(fun.y="mean", geom="bar") + facet_wrap(~class)
)
ggplot(df, aes(x=class, y=fare)) + stat_summary_bin(fun.y="mean", geom="bar") + facet_wrap(~class)
ggplot(df, aes(x=class, y=fare)) + stat_summary_bin(fun.y="mean", geom="bar") + facet_wrap(~survived)
ggplot(df, aes(x=survived, y=fare)) + stat_summary_bin(fun.y="mean", geom="bar") + facet_wrap(~class)
ggplot(df, aes(x=factor(survived), y=fare)) + stat_summary_bin(fun.y="mean", geom="bar") + facet_wrap(~class)
ggplot(df, aes(x=factor(survived), y=fare), fill=factor(survived)) + stat_summary_bin(fun.y="mean", geom="bar") + facet_wrap(~class)
ggplot(df, aes(x=factor(survived), y=fare), color=factor(survived)) + stat_summary_bin(fun.y="mean", geom="bar") + facet_wrap(~class)
ggplot(df, aes(x=factor(survived), y=fare)) + stat_summary_bin(aes(fill=factor(survived), fun.y="mean", geom="bar") + facet_wrap(~class)
)
ggplot(df, aes(x=factor(survived), y=fare)) + stat_summary_bin(aes(fill=factor(survived)), fun.y="mean", geom="bar") + facet_wrap(~class)
